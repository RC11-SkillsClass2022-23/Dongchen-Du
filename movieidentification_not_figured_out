{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "mount_file_id": "1ZDZsguiXQRTdIH4zh-xx8klCvSnaSy8n",
      "authorship_tag": "ABX9TyNCeiSr5+8nfIhQGTEO5rAM",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RC11-SkillsClass2022-23/Dongchen-Du/blob/main/movieidentification_not_figured_out\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6JkcfFTyiD3H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ac50ead5-cc87-4c0e-fee9-3fb7ff38699d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: moviepy in /usr/local/lib/python3.8/dist-packages (0.2.3.5)\n",
            "Collecting moviepy\n",
            "  Downloading moviepy-1.0.3.tar.gz (388 kB)\n",
            "\u001b[K     |████████████████████████████████| 388 kB 39.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: decorator<5.0,>=4.0.2 in /usr/local/lib/python3.8/dist-packages (from moviepy) (4.4.2)\n",
            "Requirement already satisfied: tqdm<5.0,>=4.11.2 in /usr/local/lib/python3.8/dist-packages (from moviepy) (4.64.1)\n",
            "Requirement already satisfied: requests<3.0,>=2.8.1 in /usr/local/lib/python3.8/dist-packages (from moviepy) (2.23.0)\n",
            "Collecting proglog<=1.0.0\n",
            "  Downloading proglog-0.1.10-py3-none-any.whl (6.1 kB)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from moviepy) (1.21.6)\n",
            "Requirement already satisfied: imageio<3.0,>=2.5 in /usr/local/lib/python3.8/dist-packages (from moviepy) (2.9.0)\n",
            "Collecting imageio_ffmpeg>=0.2.0\n",
            "  Downloading imageio_ffmpeg-0.4.7-py3-none-manylinux2010_x86_64.whl (26.9 MB)\n",
            "\u001b[K     |████████████████████████████████| 26.9 MB 1.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: pillow in /usr/local/lib/python3.8/dist-packages (from imageio<3.0,>=2.5->moviepy) (7.1.2)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests<3.0,>=2.8.1->moviepy) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3.0,>=2.8.1->moviepy) (2022.9.24)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3.0,>=2.8.1->moviepy) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3.0,>=2.8.1->moviepy) (2.10)\n",
            "Building wheels for collected packages: moviepy\n",
            "  Building wheel for moviepy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for moviepy: filename=moviepy-1.0.3-py3-none-any.whl size=110742 sha256=62d69d521dd7426335d45309aff607c2960b55c4244dcf85ba0724b9b11eecf1\n",
            "  Stored in directory: /root/.cache/pip/wheels/e4/a4/db/0368d3a04033da662e13926594b3a8cf1aa4ffeefe570cfac1\n",
            "Successfully built moviepy\n",
            "Installing collected packages: proglog, imageio-ffmpeg, moviepy\n",
            "  Attempting uninstall: moviepy\n",
            "    Found existing installation: moviepy 0.2.3.5\n",
            "    Uninstalling moviepy-0.2.3.5:\n",
            "      Successfully uninstalled moviepy-0.2.3.5\n",
            "Successfully installed imageio-ffmpeg-0.4.7 moviepy-1.0.3 proglog-0.1.10\n"
          ]
        }
      ],
      "source": [
        "!pip install --upgrade moviepy"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "! git clone https://github.com/kenshohara/video-classification-3d-cnn-pytorch.git"
      ],
      "metadata": {
        "id": "oMZdxc1kiMxX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "90f1febc-7189-40c9-aacd-4cff2972ca20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'video-classification-3d-cnn-pytorch'...\n",
            "remote: Enumerating objects: 121, done.\u001b[K\n",
            "Receiving objects:   0% (1/121)   \rReceiving objects:   1% (2/121)   \rReceiving objects:   2% (3/121)   \rReceiving objects:   3% (4/121)   \rReceiving objects:   4% (5/121)   \rReceiving objects:   5% (7/121)   \rReceiving objects:   6% (8/121)   \rReceiving objects:   7% (9/121)   \rReceiving objects:   8% (10/121)   \rReceiving objects:   9% (11/121)   \rReceiving objects:  10% (13/121)   \rReceiving objects:  11% (14/121)   \rReceiving objects:  12% (15/121)   \rReceiving objects:  13% (16/121)   \rReceiving objects:  14% (17/121)   \rReceiving objects:  15% (19/121)   \rReceiving objects:  16% (20/121)   \rReceiving objects:  17% (21/121)   \rReceiving objects:  18% (22/121)   \rReceiving objects:  19% (23/121)   \rReceiving objects:  20% (25/121)   \rReceiving objects:  21% (26/121)   \rremote: Total 121 (delta 0), reused 0 (delta 0), pack-reused 121\u001b[K\n",
            "Receiving objects:  22% (27/121)   \rReceiving objects:  23% (28/121)   \rReceiving objects:  24% (30/121)   \rReceiving objects:  25% (31/121)   \rReceiving objects:  26% (32/121)   \rReceiving objects:  27% (33/121)   \rReceiving objects:  28% (34/121)   \rReceiving objects:  29% (36/121)   \rReceiving objects:  30% (37/121)   \rReceiving objects:  31% (38/121)   \rReceiving objects:  32% (39/121)   \rReceiving objects:  33% (40/121)   \rReceiving objects:  34% (42/121)   \rReceiving objects:  35% (43/121)   \rReceiving objects:  36% (44/121)   \rReceiving objects:  37% (45/121)   \rReceiving objects:  38% (46/121)   \rReceiving objects:  39% (48/121)   \rReceiving objects:  40% (49/121)   \rReceiving objects:  41% (50/121)   \rReceiving objects:  42% (51/121)   \rReceiving objects:  43% (53/121)   \rReceiving objects:  44% (54/121)   \rReceiving objects:  45% (55/121)   \rReceiving objects:  46% (56/121)   \rReceiving objects:  47% (57/121)   \rReceiving objects:  48% (59/121)   \rReceiving objects:  49% (60/121)   \rReceiving objects:  50% (61/121)   \rReceiving objects:  51% (62/121)   \rReceiving objects:  52% (63/121)   \rReceiving objects:  53% (65/121)   \rReceiving objects:  54% (66/121)   \rReceiving objects:  55% (67/121)   \rReceiving objects:  56% (68/121)   \rReceiving objects:  57% (69/121)   \rReceiving objects:  58% (71/121)   \rReceiving objects:  59% (72/121)   \rReceiving objects:  60% (73/121)   \rReceiving objects:  61% (74/121)   \rReceiving objects:  62% (76/121)   \rReceiving objects:  63% (77/121)   \rReceiving objects:  64% (78/121)   \rReceiving objects:  65% (79/121)   \rReceiving objects:  66% (80/121)   \rReceiving objects:  67% (82/121)   \rReceiving objects:  68% (83/121)   \rReceiving objects:  69% (84/121)   \rReceiving objects:  70% (85/121)   \rReceiving objects:  71% (86/121)   \rReceiving objects:  72% (88/121)   \rReceiving objects:  73% (89/121)   \rReceiving objects:  74% (90/121)   \rReceiving objects:  75% (91/121)   \rReceiving objects:  76% (92/121)   \rReceiving objects:  77% (94/121)   \rReceiving objects:  78% (95/121)   \rReceiving objects:  79% (96/121)   \rReceiving objects:  80% (97/121)   \rReceiving objects:  81% (99/121)   \rReceiving objects:  82% (100/121)   \rReceiving objects:  83% (101/121)   \rReceiving objects:  84% (102/121)   \rReceiving objects:  85% (103/121)   \rReceiving objects:  86% (105/121)   \rReceiving objects:  87% (106/121)   \rReceiving objects:  88% (107/121)   \rReceiving objects:  89% (108/121)   \rReceiving objects:  90% (109/121)   \rReceiving objects:  91% (111/121)   \rReceiving objects:  92% (112/121)   \rReceiving objects:  93% (113/121)   \rReceiving objects:  94% (114/121)   \rReceiving objects:  95% (115/121)   \rReceiving objects:  96% (117/121)   \rReceiving objects:  97% (118/121)   \rReceiving objects:  98% (119/121)   \rReceiving objects:  99% (120/121)   \rReceiving objects: 100% (121/121)   \rReceiving objects: 100% (121/121), 158.63 KiB | 22.66 MiB/s, done.\n",
            "Resolving deltas:   0% (0/63)   \rResolving deltas:   7% (5/63)   \rResolving deltas:  11% (7/63)   \rResolving deltas:  12% (8/63)   \rResolving deltas:  14% (9/63)   \rResolving deltas:  23% (15/63)   \rResolving deltas:  26% (17/63)   \rResolving deltas:  30% (19/63)   \rResolving deltas:  33% (21/63)   \rResolving deltas:  38% (24/63)   \rResolving deltas:  47% (30/63)   \rResolving deltas:  49% (31/63)   \rResolving deltas:  50% (32/63)   \rResolving deltas:  58% (37/63)   \rResolving deltas:  66% (42/63)   \rResolving deltas:  85% (54/63)   \rResolving deltas:  92% (58/63)   \rResolving deltas:  93% (59/63)   \rResolving deltas: 100% (63/63)   \rResolving deltas: 100% (63/63), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%cd /content/video-classification-3d-cnn-pytorch\n",
        "!pwd"
      ],
      "metadata": {
        "id": "pPmiyPxGiOZv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9cc764ae-1b05-4719-b9b8-442e53d91d8a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/video-classification-3d-cnn-pytorch\n",
            "/content/video-classification-3d-cnn-pytorch\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import json\n",
        "import os\n",
        "from moviepy.editor import *\n",
        "from moviepy import *"
      ],
      "metadata": {
        "id": "I9ppaRtxiQfc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def load_video ():\n",
        "  videos = os.listdir('/content/drive/MyDrive/RC11_2022-23/videotoproress')\n",
        "\n",
        "  with open('input', 'w') as inputfile:\n",
        "    for v in videos:\n",
        "      if v.split('.')[-1] == 'mp4':\n",
        "        inputfile.write(v+'\\n')"
      ],
      "metadata": {
        "id": "RFLTlSFCiH2u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "load_video()"
      ],
      "metadata": {
        "id": "apb1CisRiI5v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!python main.py --input input --video_root /content/drive/MyDrive/RC11_2022-23/videotoproress --output /content/drive/MyDrive/RC11_2022-23/output/output.json --model /content/drive/MyDrive/RC11_2022-23/pretrainedmodel/resnet-34-kinetics.pth --model_depth 34 --mode score --resnet_shortcut A\n",
        "   "
      ],
      "metadata": {
        "id": "LXaFrUrYiT5K",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "76411357-5f1b-4055-e1fe-d833f4ffa4d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "loading model /content/drive/MyDrive/RC11_2022-23/pretrainedmodel/resnet-34-kinetics.pth\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/08489519-f364-42d2-983b-4d8ae411e0a9.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/08489519-f364-42d2-983b-4d8ae411e0a9.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf58.20.100\n",
            "  Duration: 00:00:01.86, start: 0.000000, bitrate: 824 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 640x480 [SAR 1:1 DAR 4:3], 655 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 32000 Hz, stereo, fltp, 177 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x55c83c23e000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 640x480 [SAR 1:1 DAR 4:3], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   54 fps=0.0 q=24.8 Lsize=N/A time=00:00:01.80 bitrate=N/A speed=12.2x    \n",
            "video:489kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py:563: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n",
            "  warnings.warn(_create_warning_msg(\n",
            "/content/video-classification-3d-cnn-pytorch/classify.py:25: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.\n",
            "  inputs = Variable(inputs, volatile=True)\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/frame-032748.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/frame-032748.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf58.29.100\n",
            "  Duration: 00:00:03.02, start: 0.000000, bitrate: 188 kb/s\n",
            "    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 480x268, 175 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 2 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x564afb148000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 480x268, q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   90 fps=0.0 q=24.8 Lsize=N/A time=00:00:03.00 bitrate=N/A speed=24.9x    \n",
            "video:400kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/111.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/111.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.56.100\n",
            "  Duration: 00:00:01.45, start: 0.000000, bitrate: 707 kb/s\n",
            "    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 854x480 [SAR 1280:1281 DAR 16:9], Closed Captions, 506 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 191 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x55cd005a8000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 854x480 [SAR 1280:1281 DAR 16:9], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   43 fps=0.0 q=24.8 Lsize=N/A time=00:00:01.43 bitrate=N/A speed=8.58x    \n",
            "video:1188kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/draft.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/draft.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "    Hw              : 1\n",
            "    bitrate         : 16000000\n",
            "    com.apple.quicktime.artwork: {\"data\":{\"edittime\":2134,\"infoStickerId\":\"\",\"musicId\":\"\",\"os\":\"windows\",\"product\":\"lv\",\"stickerId\":\"\",\"videoEffectId\":\"639477\",\"videoId\":\"e7fb1e47-0613-4624-8616-da448adb7559\",\"videoParams\":{\"be\":0,\"ef\":3,\"ft\":0,\"ma\":0,\"me\":0,\"mu\":0,\"re\":0,\"sp\":0,\"st\":0,\"\n",
            "    maxrate         : 0\n",
            "    te_is_reencode  : 1\n",
            "    encoder         : Lavf58.76.100\n",
            "  Duration: 00:01:37.57, start: 0.000000, bitrate: 5363 kb/s\n",
            "    Stream #0:0(und): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv, bt709), 1934x1080 [SAR 1:1 DAR 967:540], 5206 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 153 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x561e53d80000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    te_is_reencode  : 1\n",
            "    Hw              : 1\n",
            "    bitrate         : 16000000\n",
            "    com.apple.quicktime.artwork: {\"data\":{\"edittime\":2134,\"infoStickerId\":\"\",\"musicId\":\"\",\"os\":\"windows\",\"product\":\"lv\",\"stickerId\":\"\",\"videoEffectId\":\"639477\",\"videoId\":\"e7fb1e47-0613-4624-8616-da448adb7559\",\"videoParams\":{\"be\":0,\"ef\":3,\"ft\":0,\"ma\":0,\"me\":0,\"mu\":0,\"re\":0,\"sp\":0,\"st\":0,\"\n",
            "    maxrate         : 0\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 1934x1080 [SAR 1:1 DAR 967:540], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame= 2927 fps= 74 q=24.8 Lsize=N/A time=00:01:37.56 bitrate=N/A speed=2.47x    \n",
            "video:68352kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "! python generate_result_video/generate_result_video.py /content/drive/MyDrive/RC11_2022-23/output/output.json /content/drive/MyDrive/RC11_2022-23/videotoproress /content/drive/MyDrive/RC11_2022-23/video_done class_names_list 2\n",
        "     "
      ],
      "metadata": {
        "id": "0H9vUPjiiWQN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5e16a7af-9f28-4216-8084-ed4ca48be0a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/08489519-f364-42d2-983b-4d8ae411e0a9.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/08489519-f364-42d2-983b-4d8ae411e0a9.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf58.20.100\n",
            "  Duration: 00:00:01.86, start: 0.000000, bitrate: 824 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 640x480 [SAR 1:1 DAR 4:3], 655 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 32000 Hz, stereo, fltp, 177 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x55d7dd224000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 640x480 [SAR 1:1 DAR 4:3], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   54 fps=0.0 q=24.8 Lsize=N/A time=00:00:01.80 bitrate=N/A speed=11.9x    \n",
            "video:489kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, image2, from 'tmp/image_%05d_pred.jpg':\n",
            "  Duration: 00:00:01.92, start: 0.000000, bitrate: N/A\n",
            "    Stream #0:0: Video: mjpeg, yuvj420p(pc, bt470bg/unknown/unknown), 640x480 [SAR 1:1 DAR 4:3], 25 fps, 25 tbr, 25 tbn, 25 tbc\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (mjpeg (native) -> h264 (libx264))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0musing SAR=1/1\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0musing cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2 AVX512\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mprofile High, level 3.0\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0m264 - core 152 r2854 e9a5903 - H.264/MPEG-4 AVC codec - Copyleft 2003-2017 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=3 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=abr mbtree=1 bitrate=1000 ratetol=1.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n",
            "Output #0, mp4, to '/content/drive/MyDrive/RC11_2022-23/video_done/08489519-f364-42d2-983b-4d8ae411e0a9.mp4':\n",
            "  Metadata:\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0: Video: h264 (libx264) (avc1 / 0x31637661), yuvj420p(pc), 640x480 [SAR 1:1 DAR 4:3], q=-1--1, 1000 kb/s, 30 fps, 15360 tbn, 30 tbc\n",
            "    Metadata:\n",
            "      encoder         : Lavc57.107.100 libx264\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/1000000 buffer size: 0 vbv_delay: -1\n",
            "frame=   48 fps= 47 q=-1.0 Lsize=     198kB time=00:00:01.50 bitrate=1079.5kbits/s speed=1.48x    \n",
            "video:196kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.706471%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mframe I:1     Avg QP:25.61  size:  9623\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mframe P:15    Avg QP:26.61  size:  6096\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mframe B:32    Avg QP:27.52  size:  3101\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mconsecutive B-frames:  2.1% 25.0%  6.2% 66.7%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mmb I  I16..4: 27.8% 69.2%  3.0%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mmb P  I16..4: 27.9% 50.4%  0.8%  P16..4:  8.4%  2.8%  1.0%  0.0%  0.0%    skip: 8.6%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mmb B  I16..4: 10.1% 21.7%  0.1%  B16..8: 15.3%  4.3%  1.6%  direct: 3.3%  skip:43.7%  L0:48.3% L1:46.0% BI: 5.6%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mfinal ratefactor: 24.73\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0m8x8 transform intra:65.9% inter:87.5%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mcoded y,uvDC,uvAC intra: 46.0% 52.5% 0.6% inter: 10.8% 10.0% 0.0%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mi16 v,h,dc,p: 68% 20% 12%  1%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mi8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 39% 15% 36%  3%  1%  1%  1%  1%  4%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mi4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 51% 20% 12%  3%  2%  3%  3%  3%  4%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mi8c dc,h,v,p: 49% 24% 26%  1%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mWeighted P-Frames: Y:0.0% UV:0.0%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mref P L0: 66.5% 10.3% 15.3%  7.8%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mref B L0: 80.9% 16.5%  2.5%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mref B L1: 96.7%  3.3%\n",
            "\u001b[1;36m[libx264 @ 0x563c94a97e00] \u001b[0mkb/s:1001.47\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/frame-032748.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/frame-032748.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf58.29.100\n",
            "  Duration: 00:00:03.02, start: 0.000000, bitrate: 188 kb/s\n",
            "    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 480x268, 175 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 2 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x563f7b746000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 480x268, q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   90 fps=0.0 q=24.8 Lsize=N/A time=00:00:03.00 bitrate=N/A speed=25.7x    \n",
            "video:400kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, image2, from 'tmp/image_%05d_pred.jpg':\n",
            "  Duration: 00:00:03.20, start: 0.000000, bitrate: N/A\n",
            "    Stream #0:0: Video: mjpeg, yuvj420p(pc, bt470bg/unknown/unknown), 480x268 [SAR 1:1 DAR 120:67], 25 fps, 25 tbr, 25 tbn, 25 tbc\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (mjpeg (native) -> h264 (libx264))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0musing SAR=1/1\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0musing cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2 AVX512\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mprofile High, level 2.1\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0m264 - core 152 r2854 e9a5903 - H.264/MPEG-4 AVC codec - Copyleft 2003-2017 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=3 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=abr mbtree=1 bitrate=1000 ratetol=1.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n",
            "Output #0, mp4, to '/content/drive/MyDrive/RC11_2022-23/video_done/frame-032748.mp4':\n",
            "  Metadata:\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0: Video: h264 (libx264) (avc1 / 0x31637661), yuvj420p(pc), 480x268 [SAR 1:1 DAR 120:67], q=-1--1, 1000 kb/s, 30 fps, 15360 tbn, 30 tbc\n",
            "    Metadata:\n",
            "      encoder         : Lavc57.107.100 libx264\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/1000000 buffer size: 0 vbv_delay: -1\n",
            "frame=   80 fps=0.0 q=-1.0 Lsize=     158kB time=00:00:02.56 bitrate= 505.1kbits/s speed=4.99x    \n",
            "video:157kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 1.069635%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mframe I:1     Avg QP:21.40  size: 10238\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mframe P:34    Avg QP:11.31  size:  3072\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mframe B:45    Avg QP:19.32  size:   999\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mconsecutive B-frames: 21.2%  7.5% 11.2% 60.0%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mmb I  I16..4:  7.6% 87.6%  4.7%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mmb P  I16..4:  2.0%  6.8%  1.0%  P16..4: 26.0%  9.7% 13.8%  0.0%  0.0%    skip:40.7%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mmb B  I16..4:  0.7%  2.6%  0.1%  B16..8: 29.5%  6.8%  3.4%  direct: 6.1%  skip:50.8%  L0:42.8% L1:51.8% BI: 5.5%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mfinal ratefactor: 10.06\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0m8x8 transform intra:74.5% inter:89.5%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mcoded y,uvDC,uvAC intra: 62.6% 61.2% 7.0% inter: 14.7% 14.3% 2.2%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mi16 v,h,dc,p: 28% 50% 19%  3%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mi8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 13% 25% 43%  4%  2%  2%  1%  2%  8%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mi4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 34% 34% 14%  3%  4%  2%  3%  2%  5%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mi8c dc,h,v,p: 39% 37% 21%  3%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mWeighted P-Frames: Y:0.0% UV:0.0%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mref P L0: 65.6% 18.1%  9.7%  6.6%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mref B L0: 84.1% 13.5%  2.4%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mref B L1: 91.7%  8.3%\n",
            "\u001b[1;36m[libx264 @ 0x556f1a973e00] \u001b[0mkb/s:478.89\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/111.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/111.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.56.100\n",
            "  Duration: 00:00:01.45, start: 0.000000, bitrate: 707 kb/s\n",
            "    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 854x480 [SAR 1280:1281 DAR 16:9], Closed Captions, 506 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 191 kb/s (default)\n",
            "    Metadata:\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x556e00412000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 854x480 [SAR 1280:1281 DAR 16:9], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=   43 fps=0.0 q=24.8 Lsize=N/A time=00:00:01.43 bitrate=N/A speed= 8.7x    \n",
            "video:1188kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, image2, from 'tmp/image_%05d_pred.jpg':\n",
            "  Duration: 00:00:01.28, start: 0.000000, bitrate: N/A\n",
            "    Stream #0:0: Video: mjpeg, yuvj420p(pc, bt470bg/unknown/unknown), 854x480 [SAR 1:1 DAR 427:240], 25 fps, 25 tbr, 25 tbn, 25 tbc\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (mjpeg (native) -> h264 (libx264))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0musing SAR=1/1\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0musing cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2 AVX512\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mprofile High, level 3.1\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0m264 - core 152 r2854 e9a5903 - H.264/MPEG-4 AVC codec - Copyleft 2003-2017 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=3 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=abr mbtree=1 bitrate=1000 ratetol=1.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n",
            "Output #0, mp4, to '/content/drive/MyDrive/RC11_2022-23/video_done/111.mp4':\n",
            "  Metadata:\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0: Video: h264 (libx264) (avc1 / 0x31637661), yuvj420p(pc), 854x480 [SAR 1:1 DAR 427:240], q=-1--1, 1000 kb/s, 30.71 fps, 12284 tbn, 30.71 tbc\n",
            "    Metadata:\n",
            "      encoder         : Lavc57.107.100 libx264\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/1000000 buffer size: 0 vbv_delay: -1\n",
            "frame=   32 fps=0.0 q=-1.0 Lsize=      85kB time=00:00:00.94 bitrate= 735.8kbits/s speed=2.23x    \n",
            "video:84kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 1.433926%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mframe I:1     Avg QP:26.19  size: 37933\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mframe P:8     Avg QP:30.68  size:  4693\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mframe B:23    Avg QP:30.56  size:   411\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mconsecutive B-frames:  3.1%  0.0%  9.4% 87.5%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mmb I  I16..4: 17.3% 64.4% 18.2%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mmb P  I16..4:  1.8%  5.7%  0.4%  P16..4: 11.6%  6.1%  4.1%  0.0%  0.0%    skip:70.3%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mmb B  I16..4:  0.9%  0.9%  0.0%  B16..8: 15.0%  0.7%  0.1%  direct: 0.2%  skip:82.3%  L0:42.8% L1:55.6% BI: 1.6%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mfinal ratefactor: 25.65\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0m8x8 transform intra:64.0% inter:64.2%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mcoded y,uvDC,uvAC intra: 31.4% 38.7% 19.0% inter: 2.3% 2.4% 0.3%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mi16 v,h,dc,p: 45% 44% 11%  0%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mi8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 28% 15% 40%  3%  2%  4%  2%  3%  3%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mi4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 35% 25% 14%  4%  4%  5%  4%  5%  4%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mi8c dc,h,v,p: 50% 23% 23%  3%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mWeighted P-Frames: Y:0.0% UV:0.0%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mref P L0: 75.4%  6.5% 12.6%  5.5%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mref B L0: 71.5% 21.5%  7.0%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mref B L1: 89.1% 10.9%\n",
            "\u001b[1;36m[libx264 @ 0x55c8f2913e00] \u001b[0mkb/s:652.08\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/draft.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/draft.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "    Hw              : 1\n",
            "    bitrate         : 16000000\n",
            "    com.apple.quicktime.artwork: {\"data\":{\"edittime\":2134,\"infoStickerId\":\"\",\"musicId\":\"\",\"os\":\"windows\",\"product\":\"lv\",\"stickerId\":\"\",\"videoEffectId\":\"639477\",\"videoId\":\"e7fb1e47-0613-4624-8616-da448adb7559\",\"videoParams\":{\"be\":0,\"ef\":3,\"ft\":0,\"ma\":0,\"me\":0,\"mu\":0,\"re\":0,\"sp\":0,\"st\":0,\"\n",
            "    maxrate         : 0\n",
            "    te_is_reencode  : 1\n",
            "    encoder         : Lavf58.76.100\n",
            "  Duration: 00:01:37.57, start: 0.000000, bitrate: 5363 kb/s\n",
            "    Stream #0:0(und): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv, bt709), 1934x1080 [SAR 1:1 DAR 967:540], 5206 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : VideoHandler\n",
            "    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 153 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : SoundHandler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x55f0fcca4000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : isom\n",
            "    minor_version   : 512\n",
            "    compatible_brands: isomiso2avc1mp41\n",
            "    te_is_reencode  : 1\n",
            "    Hw              : 1\n",
            "    bitrate         : 16000000\n",
            "    com.apple.quicktime.artwork: {\"data\":{\"edittime\":2134,\"infoStickerId\":\"\",\"musicId\":\"\",\"os\":\"windows\",\"product\":\"lv\",\"stickerId\":\"\",\"videoEffectId\":\"639477\",\"videoId\":\"e7fb1e47-0613-4624-8616-da448adb7559\",\"videoParams\":{\"be\":0,\"ef\":3,\"ft\":0,\"ma\":0,\"me\":0,\"mu\":0,\"re\":0,\"sp\":0,\"st\":0,\"\n",
            "    maxrate         : 0\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 1934x1080 [SAR 1:1 DAR 967:540], q=2-31, 200 kb/s, 30 fps, 30 tbn, 30 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2022-12-06T03:34:59.000000Z\n",
            "      handler_name    : VideoHandler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame= 2927 fps= 73 q=24.8 Lsize=N/A time=00:01:37.56 bitrate=N/A speed=2.44x    \n",
            "video:68352kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, image2, from 'tmp/image_%05d_pred.jpg':\n",
            "  Duration: 00:01:56.48, start: 0.000000, bitrate: N/A\n",
            "    Stream #0:0: Video: mjpeg, yuvj420p(pc, bt470bg/unknown/unknown), 1934x1080 [SAR 1:1 DAR 967:540], 25 fps, 25 tbr, 25 tbn, 25 tbc\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (mjpeg (native) -> h264 (libx264))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0musing SAR=1/1\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0musing cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2 AVX512\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mprofile High, level 4.2\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0m264 - core 152 r2854 e9a5903 - H.264/MPEG-4 AVC codec - Copyleft 2003-2017 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=3 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=abr mbtree=1 bitrate=1000 ratetol=1.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n",
            "Output #0, mp4, to '/content/drive/MyDrive/RC11_2022-23/video_done/draft.mp4':\n",
            "  Metadata:\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0: Video: h264 (libx264) (avc1 / 0x31637661), yuvj420p(pc), 1934x1080 [SAR 1:1 DAR 967:540], q=-1--1, 1000 kb/s, 30.02 fps, 12008 tbn, 30.02 tbc\n",
            "    Metadata:\n",
            "      encoder         : Lavc57.107.100 libx264\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/1000000 buffer size: 0 vbv_delay: -1\n",
            "frame= 2912 fps= 17 q=-1.0 Lsize=   17209kB time=00:01:36.90 bitrate=1454.9kbits/s speed=0.577x    \n",
            "video:17187kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.133377%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mframe I:14    Avg QP:11.34  size: 28538\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mframe P:2150  Avg QP:11.86  size:  5573\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mframe B:748   Avg QP:21.00  size:  6974\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mconsecutive B-frames: 60.6% 14.6%  2.7% 22.1%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mmb I  I16..4: 64.8% 33.0%  2.2%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mmb P  I16..4: 22.7%  3.1%  0.5%  P16..4:  2.8%  0.7%  0.7%  0.0%  0.0%    skip:69.6%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mmb B  I16..4:  1.0%  2.5%  0.2%  B16..8: 18.5%  2.3%  0.9%  direct: 1.6%  skip:73.0%  L0:56.4% L1:41.5% BI: 2.1%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mfinal ratefactor: 25.82\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0m8x8 transform intra:14.7% inter:93.5%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mcoded y,uvDC,uvAC intra: 8.9% 14.5% 1.9% inter: 2.5% 2.8% 0.5%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mi16 v,h,dc,p: 80% 18%  1%  0%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mi8 v,h,dc,ddl,ddr,vr,hd,vl,hu: 16% 14% 60%  3%  0%  0%  0%  1%  5%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mi4 v,h,dc,ddl,ddr,vr,hd,vl,hu: 45% 43% 10%  0%  0%  0%  0%  0%  0%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mi8c dc,h,v,p: 52% 23% 25%  0%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mWeighted P-Frames: Y:0.0% UV:0.0%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mref P L0: 45.2% 18.9% 18.6% 17.4%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mref B L0: 62.7% 27.3% 10.0%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mref B L1: 85.1% 14.9%\n",
            "\u001b[1;36m[libx264 @ 0x556798c4fe00] \u001b[0mkb/s:1451.37\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "load_video()"
      ],
      "metadata": {
        "id": "wgfxDs9vhY30"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!python main.py --input input --video_root /content/drive/MyDrive/RC11_2022-23/videotoproress --output /content/drive/MyDrive/RC11_2022-23/output/output.json --model /content/drive/MyDrive/RC11_2022-23/pretrainedmodel/resnet-34-kinetics.pth --model_depth 34 --mode feature --resnet_shortcut A\n",
        "   "
      ],
      "metadata": {
        "id": "0NCravn2-XC7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "55b4b25b-9b6b-42bb-ebaf-a98b01ac9a9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "loading model /content/drive/MyDrive/RC11_2022-23/pretrainedmodel/resnet-34-kinetics.pth\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/Acconci-Vito_Three-Adaptation-Studies_1970.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/Acconci-Vito_Three-Adaptation-Studies_1970.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    creation_time   : 2013-02-13T03:07:28.000000Z\n",
            "  Duration: 00:07:55.05, start: 0.000000, bitrate: 1291 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv), 720x480 [SAR 1:1 DAR 3:2], 1194 kb/s, 29.97 fps, 29.97 tbr, 29970 tbn, 59.94 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:07:28.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : AVC Coding\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 93 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:07:28.000000Z\n",
            "      handler_name    : Mainconcept MP4 Sound Media Handler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x560b0772c000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 720x480 [SAR 1:1 DAR 3:2], q=2-31, 200 kb/s, 29.97 fps, 29.97 tbn, 29.97 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:07:28.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=14235 fps=336 q=24.8 Lsize=N/A time=00:07:54.97 bitrate=N/A speed=11.2x    \n",
            "video:94278kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py:563: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n",
            "  warnings.warn(_create_warning_msg(\n",
            "/content/video-classification-3d-cnn-pytorch/classify.py:25: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.\n",
            "  inputs = Variable(inputs, volatile=True)\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/Abdoh_Reza_Tight_Right_White_1993_1.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/Abdoh_Reza_Tight_Right_White_1993_1.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    creation_time   : 2013-02-12T22:57:25.000000Z\n",
            "  Duration: 00:14:02.11, start: 0.000000, bitrate: 581 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv), 320x240 [SAR 1:1 DAR 4:3], 483 kb/s, 29.97 fps, 29.97 tbr, 29970 tbn, 59.94 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:57:25.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : AVC Coding\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 93 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:57:25.000000Z\n",
            "      handler_name    : Mainconcept MP4 Sound Media Handler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x5615bae8c000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 320x240 [SAR 1:1 DAR 4:3], q=2-31, 200 kb/s, 29.97 fps, 29.97 tbn, 29.97 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:57:25.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=25236 fps=1071 q=24.8 Lsize=N/A time=00:14:02.04 bitrate=N/A speed=35.7x    \n",
            "video:72793kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/Abramovic-Marina_Dangerous-Games_2008.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/Abramovic-Marina_Dangerous-Games_2008.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: isomavc1mp42\n",
            "    creation_time   : 2009-01-14T12:02:07.000000Z\n",
            "  Duration: 00:05:11.64, start: 0.000000, bitrate: 494 kb/s\n",
            "    Stream #0:0(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 110 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2009-01-14T12:02:07.000000Z\n",
            "      handler_name    : (C) 2007 Google Inc. v08.13.2007.\n",
            "    Stream #0:1(und): Video: h264 (Baseline) (avc1 / 0x31637661), yuv420p, 480x270 [SAR 1:1 DAR 16:9], 381 kb/s, 23.97 fps, 23.97 tbr, 23970 tbn, 47940 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2009-01-14T12:02:08.000000Z\n",
            "      handler_name    : (C) 2007 Google Inc. v08.13.2007.\n",
            "Stream mapping:\n",
            "  Stream #0:1 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x55a208560000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: isomavc1mp42\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 480x270 [SAR 1:1 DAR 16:9], q=2-31, 200 kb/s, 23.97 fps, 23.97 tbn, 23.97 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2009-01-14T12:02:08.000000Z\n",
            "      handler_name    : (C) 2007 Google Inc. v08.13.2007.\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame= 7470 fps=824 q=24.8 Lsize=N/A time=00:05:11.63 bitrate=N/A speed=34.4x    \n",
            "video:38379kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/Acconi-Vito_Undertone_1972_1.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/Acconi-Vito_Undertone_1972_1.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    creation_time   : 2013-02-13T03:42:18.000000Z\n",
            "  Duration: 00:09:15.54, start: 0.000000, bitrate: 1291 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv), 640x480 [SAR 1:1 DAR 4:3], 1194 kb/s, 29.97 fps, 29.97 tbr, 29970 tbn, 59.94 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:42:18.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : AVC Coding\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 93 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:42:18.000000Z\n",
            "      handler_name    : Mainconcept MP4 Sound Media Handler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x5557af7ec000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 640x480 [SAR 1:1 DAR 4:3], q=2-31, 200 kb/s, 29.97 fps, 29.97 tbn, 29.97 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-13T03:42:18.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=16647 fps=369 q=24.8 Lsize=N/A time=00:09:15.45 bitrate=N/A speed=12.3x    \n",
            "video:102984kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "/content/drive/MyDrive/RC11_2022-23/videotoproress/Abdoh_Reza_The_Weeping_Song_1991_1.mp4\n",
            "ffmpeg version 3.4.11-0ubuntu0.1 Copyright (c) 2000-2022 the FFmpeg developers\n",
            "  built with gcc 7 (Ubuntu 7.5.0-3ubuntu1~18.04)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\n",
            "  libavutil      55. 78.100 / 55. 78.100\n",
            "  libavcodec     57.107.100 / 57.107.100\n",
            "  libavformat    57. 83.100 / 57. 83.100\n",
            "  libavdevice    57. 10.100 / 57. 10.100\n",
            "  libavfilter     6.107.100 /  6.107.100\n",
            "  libavresample   3.  7.  0 /  3.  7.  0\n",
            "  libswscale      4.  8.100 /  4.  8.100\n",
            "  libswresample   2.  9.100 /  2.  9.100\n",
            "  libpostproc    54.  7.100 / 54.  7.100\n",
            "Input #0, mov,mp4,m4a,3gp,3g2,mj2, from '/content/drive/MyDrive/RC11_2022-23/videotoproress/Abdoh_Reza_The_Weeping_Song_1991_1.mp4':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    creation_time   : 2013-02-12T22:54:12.000000Z\n",
            "  Duration: 00:09:13.02, start: 0.000000, bitrate: 1291 kb/s\n",
            "    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p(tv), 640x480 [SAR 1:1 DAR 4:3], 1194 kb/s, 29.97 fps, 29.97 tbr, 29970 tbn, 59.94 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:54:12.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : AVC Coding\n",
            "    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 93 kb/s (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:54:12.000000Z\n",
            "      handler_name    : Mainconcept MP4 Sound Media Handler\n",
            "Stream mapping:\n",
            "  Stream #0:0 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "\u001b[1;34m[swscaler @ 0x5601723be000] \u001b[0m\u001b[0;33mdeprecated pixel format used, make sure you did set range correctly\n",
            "\u001b[0mOutput #0, image2, to 'tmp/image_%05d.jpg':\n",
            "  Metadata:\n",
            "    major_brand     : mp42\n",
            "    minor_version   : 0\n",
            "    compatible_brands: mp42mp41\n",
            "    encoder         : Lavf57.83.100\n",
            "    Stream #0:0(eng): Video: mjpeg, yuvj420p(pc), 640x480 [SAR 1:1 DAR 4:3], q=2-31, 200 kb/s, 29.97 fps, 29.97 tbn, 29.97 tbc (default)\n",
            "    Metadata:\n",
            "      creation_time   : 2013-02-12T22:54:12.000000Z\n",
            "      handler_name    : Mainconcept MP4 Video Media Handler\n",
            "      encoder         : Lavc57.107.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1\n",
            "frame=16572 fps=359 q=24.8 Lsize=N/A time=00:09:12.95 bitrate=N/A speed=  12x    \n",
            "video:132532kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "file = open('/content/drive/MyDrive/RC11_2022-23/output/output.json')\n",
        "segments = json.load(file)"
      ],
      "metadata": {
        "id": "4A3F384choQ4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "len(segments)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jciJNzAOh1A_",
        "outputId": "d8449c47-afdf-4ad5-a875-1801aaf80939"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "Bs__pAX7h4H7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "for s in segments: print(s['video'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tCSv8ouMiLNC",
        "outputId": "c634b658-fda6-477e-d502-3b465a678c03"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Acconci-Vito_Three-Adaptation-Studies_1970.mp4\n",
            "Abdoh_Reza_Tight_Right_White_1993_1.mp4\n",
            "Abramovic-Marina_Dangerous-Games_2008.mp4\n",
            "Acconi-Vito_Undertone_1972_1.mp4\n",
            "Abdoh_Reza_The_Weeping_Song_1991_1.mp4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "AFeatures = []\n",
        "for s in segments[0]['clips']:\n",
        "  AFeatures.append(np.array(s['features']))  "
      ],
      "metadata": {
        "id": "9Z9bzxINiUyy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "BFeatures = []\n",
        "for s in segments[1]['clips']:\n",
        "  BFeatures.append(np.array(s['features']))  "
      ],
      "metadata": {
        "id": "4WQku74biXfj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "CFeatures = []\n",
        "for s in segments[2]['clips']:\n",
        "  CFeatures.append(np.array(s['features']))  "
      ],
      "metadata": {
        "id": "i-4WkmKZihCr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "DFeatures = []\n",
        "for s in segments[3]['clips']:\n",
        "  DFeatures.append(np.array(s['features']))  "
      ],
      "metadata": {
        "id": "cNEbzdH3ijo1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(len(AFeatures),len(BFeatures),len(CFeatures),len(DFeatures))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4LIj3Jdfi0lG",
        "outputId": "cdd8b16f-47dd-40a6-be72-13ce1b146ca1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "889 1577 466 1040\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "u8VDF6vAkGMe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def bestrangestart (longfeatures,shortfeatures):\n",
        "\n",
        "  global bestRangeStart\n",
        "  global bestRangeScore\n",
        "  bestRangeStart = 0\n",
        "  bestRangeScore = 100000000\n",
        "  for i in range(len(longfeatures)-len(shortfeatures)):\n",
        "    distance = 0\n",
        "    for j in range(len(shortfeatures)):\n",
        "      d = np.linalg.norm(longfeatures[i+j]-shortfeatures[j])\n",
        "      distance += d\n",
        "    print(distance)\n",
        "    if distance < bestRangeScore:\n",
        "      bestRangeScore = distance\n",
        "      bestRangeStart = i\n",
        "  return bestRangeStart"
      ],
      "metadata": {
        "id": "kB1Plr1BCDb9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bestrangestart(BFeatures,CFeatures)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sTXUbHMhitJe",
        "outputId": "7df1d75a-9df5-4566-dfd0-c8c3adf5ea7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10366.294775113929\n",
            "10366.023372136375\n",
            "10373.988962830947\n",
            "10377.22638311658\n",
            "10380.22415602484\n",
            "10396.148463685695\n",
            "10402.43636392811\n",
            "10421.549413386234\n",
            "10431.55182319897\n",
            "10441.607082090748\n",
            "10440.043226136473\n",
            "10451.334294360127\n",
            "10455.7413366641\n",
            "10459.907573044899\n",
            "10452.159090844916\n",
            "10443.105633275249\n",
            "10441.775053421303\n",
            "10442.048773823573\n",
            "10442.737089648728\n",
            "10445.331546231397\n",
            "10439.236585867795\n",
            "10435.128180201047\n",
            "10429.322243447223\n",
            "10406.349602997\n",
            "10397.888404702704\n",
            "10385.761308395817\n",
            "10378.281573546208\n",
            "10377.833283507896\n",
            "10374.690205142042\n",
            "10365.40753749823\n",
            "10355.732750831721\n",
            "10350.906489292256\n",
            "10340.763633347655\n",
            "10329.997918248564\n",
            "10317.187861889808\n",
            "10318.226154306285\n",
            "10311.351646115116\n",
            "10305.26178242348\n",
            "10294.06892437298\n",
            "10282.123511133346\n",
            "10276.836436382124\n",
            "10272.798023738498\n",
            "10263.723927821577\n",
            "10265.908210528967\n",
            "10261.169346119788\n",
            "10247.353177084568\n",
            "10250.575846566944\n",
            "10239.630989429377\n",
            "10238.797117330198\n",
            "10242.247065108688\n",
            "10244.938178377972\n",
            "10244.27099055266\n",
            "10249.372527423879\n",
            "10256.749582555947\n",
            "10262.477129597592\n",
            "10263.282766595401\n",
            "10258.037123651626\n",
            "10271.941476196916\n",
            "10273.226115885911\n",
            "10265.221426666116\n",
            "10255.14816841079\n",
            "10248.884712895735\n",
            "10243.274532104584\n",
            "10241.72954051078\n",
            "10227.14406341623\n",
            "10223.052403587608\n",
            "10216.70697833349\n",
            "10203.265027524856\n",
            "10200.622716498972\n",
            "10191.01927444801\n",
            "10175.602492929575\n",
            "10167.830017577606\n",
            "10157.708108814728\n",
            "10159.057277517837\n",
            "10153.122952682534\n",
            "10149.414421485277\n",
            "10161.518625248631\n",
            "10150.557380281676\n",
            "10138.606245112534\n",
            "10127.440111499407\n",
            "10125.637353124263\n",
            "10110.96048427832\n",
            "10104.343548655886\n",
            "10105.882621743494\n",
            "10104.909035951343\n",
            "10110.891106835625\n",
            "10113.8252828435\n",
            "10122.671666711705\n",
            "10121.83018359167\n",
            "10117.782681176432\n",
            "10118.94723092405\n",
            "10122.602142100397\n",
            "10120.082728730744\n",
            "10113.944978847794\n",
            "10101.727252092847\n",
            "10105.872527289197\n",
            "10100.26723833683\n",
            "10102.851497272219\n",
            "10101.17390624096\n",
            "10109.415085443847\n",
            "10091.17838762779\n",
            "10081.853182408084\n",
            "10077.00526517579\n",
            "10066.673594320546\n",
            "10059.915507091217\n",
            "10057.370870850997\n",
            "10059.401543457601\n",
            "10053.922261597163\n",
            "10048.016834432603\n",
            "10057.04141687473\n",
            "10071.08317219348\n",
            "10071.272103932672\n",
            "10077.785416037004\n",
            "10067.284238226008\n",
            "10064.128978962348\n",
            "10065.121869454164\n",
            "10062.920255327443\n",
            "10058.778648703665\n",
            "10051.450463526819\n",
            "10061.002235820712\n",
            "10051.653551304642\n",
            "10050.11955684364\n",
            "10049.350512885905\n",
            "10038.383349937356\n",
            "10039.64687686738\n",
            "10033.892789009204\n",
            "10028.147119673591\n",
            "10015.683022117808\n",
            "10007.510292350267\n",
            "10005.239245011819\n",
            "10001.552099579263\n",
            "10001.37763061684\n",
            "9993.247191218312\n",
            "9989.463369421763\n",
            "9988.262105087939\n",
            "9992.029958803549\n",
            "9995.7407341051\n",
            "9989.149336599998\n",
            "9983.360565509047\n",
            "9974.402124513508\n",
            "9964.530635844269\n",
            "9960.71923106687\n",
            "9958.485311741006\n",
            "9957.182609602707\n",
            "9959.758026935635\n",
            "9960.114417786452\n",
            "9960.143466571311\n",
            "9959.406293696145\n",
            "9956.74608919276\n",
            "9959.924957236155\n",
            "9962.503056054926\n",
            "9966.164866261952\n",
            "9955.742285829256\n",
            "9961.134140240785\n",
            "9958.770070941648\n",
            "9960.496064445315\n",
            "9956.88867164203\n",
            "9960.233340201\n",
            "9958.722088547886\n",
            "9960.809353338907\n",
            "9967.803272159861\n",
            "9968.396975179277\n",
            "9978.770016268027\n",
            "9974.171152174407\n",
            "9976.63689726443\n",
            "9968.339210290556\n",
            "9970.667585265774\n",
            "9963.25865316472\n",
            "9970.142290697959\n",
            "9970.33223322158\n",
            "9979.636978436047\n",
            "9978.654445446782\n",
            "9985.576822442474\n",
            "9999.631685486465\n",
            "9999.882556674214\n",
            "10008.021920678837\n",
            "10014.754363321976\n",
            "10019.385486464404\n",
            "10022.565429933997\n",
            "10020.266044050237\n",
            "10028.93080960188\n",
            "10040.481236525507\n",
            "10050.018080880733\n",
            "10059.27788206483\n",
            "10066.469561592126\n",
            "10066.37847739412\n",
            "10066.511651132481\n",
            "10067.065162055738\n",
            "10074.549874240636\n",
            "10075.370918346609\n",
            "10079.879013196463\n",
            "10084.814203239424\n",
            "10086.59786388546\n",
            "10077.37163213386\n",
            "10081.686079238194\n",
            "10090.62692263185\n",
            "10090.67584376435\n",
            "10095.705410380288\n",
            "10120.292308978274\n",
            "10130.65522910683\n",
            "10133.934448074606\n",
            "10142.34769793644\n",
            "10145.761838088165\n",
            "10156.516385386194\n",
            "10157.559450127254\n",
            "10169.78225567464\n",
            "10175.553655480106\n",
            "10186.492941389974\n",
            "10191.443121704313\n",
            "10206.339977407324\n",
            "10210.805174758854\n",
            "10222.82753742563\n",
            "10230.160861202345\n",
            "10238.08353192478\n",
            "10245.14612486071\n",
            "10254.588954660216\n",
            "10256.628216703553\n",
            "10265.391222207318\n",
            "10273.992024404199\n",
            "10276.590731000719\n",
            "10281.519107616848\n",
            "10279.868429177715\n",
            "10294.99386971567\n",
            "10300.342817498731\n",
            "10311.401646737904\n",
            "10312.738628285733\n",
            "10310.74215499634\n",
            "10315.544558101827\n",
            "10315.919196116918\n",
            "10318.665091593855\n",
            "10332.171413644735\n",
            "10339.317044328422\n",
            "10346.288010116801\n",
            "10353.732834961764\n",
            "10352.27819436652\n",
            "10357.134035515195\n",
            "10357.573308585894\n",
            "10364.71814780653\n",
            "10359.857086362324\n",
            "10367.841871998196\n",
            "10349.091698505528\n",
            "10347.636589140786\n",
            "10335.873443939709\n",
            "10328.920389952302\n",
            "10316.892429399357\n",
            "10306.2919181929\n",
            "10301.016665714733\n",
            "10281.759664746114\n",
            "10274.996970807044\n",
            "10262.754169520853\n",
            "10251.962737184933\n",
            "10243.820023741693\n",
            "10227.587084768928\n",
            "10217.962286861335\n",
            "10204.335756214874\n",
            "10189.688541402455\n",
            "10179.579916245315\n",
            "10174.005588202239\n",
            "10159.423352958114\n",
            "10151.203264874672\n",
            "10144.364555809814\n",
            "10126.248099115577\n",
            "10109.212544471218\n",
            "10097.723902038955\n",
            "10087.099389964693\n",
            "10081.56356302146\n",
            "10071.70384778386\n",
            "10060.76397047893\n",
            "10049.165183642654\n",
            "10037.875457066608\n",
            "10023.730847205627\n",
            "10023.450287515401\n",
            "10021.686171133399\n",
            "10026.79413883132\n",
            "10014.16942871549\n",
            "10009.218803815736\n",
            "10005.048755210304\n",
            "9994.238215162479\n",
            "9975.924056873902\n",
            "9971.508376914302\n",
            "9963.856040151006\n",
            "9952.106305475945\n",
            "9937.539916136511\n",
            "9928.630259197751\n",
            "9925.275711842933\n",
            "9916.507593434619\n",
            "9905.86989421304\n",
            "9891.990421976912\n",
            "9885.305256770916\n",
            "9876.259864915575\n",
            "9870.413478270017\n",
            "9861.67237199958\n",
            "9848.471968112042\n",
            "9846.203828064792\n",
            "9844.188522250046\n",
            "9831.636094755964\n",
            "9823.3070160702\n",
            "9819.69869713082\n",
            "9824.499479129225\n",
            "9812.919431924605\n",
            "9807.748842637453\n",
            "9814.101273701352\n",
            "9816.635657256571\n",
            "9814.401654791362\n",
            "9824.652466365003\n",
            "9821.61600146082\n",
            "9816.072994290806\n",
            "9811.665838098148\n",
            "9809.625704684157\n",
            "9795.708963460758\n",
            "9787.185853845403\n",
            "9776.232772108086\n",
            "9776.402523896735\n",
            "9785.887960863205\n",
            "9792.104922425802\n",
            "9805.120619148764\n",
            "9813.360854133165\n",
            "9824.940466487567\n",
            "9826.976265325062\n",
            "9841.085430102139\n",
            "9841.418715504344\n",
            "9847.597033167116\n",
            "9853.523362953574\n",
            "9856.256107785863\n",
            "9848.287494712373\n",
            "9841.722349314097\n",
            "9845.383384576888\n",
            "9846.630229498927\n",
            "9853.73461388818\n",
            "9865.897424888375\n",
            "9872.121531830147\n",
            "9861.715118488173\n",
            "9866.533187052766\n",
            "9875.5363749535\n",
            "9869.791905492928\n",
            "9868.528191372832\n",
            "9875.903384578409\n",
            "9882.347133349605\n",
            "9880.21192843819\n",
            "9879.040990613394\n",
            "9881.151614118147\n",
            "9886.205255889136\n",
            "9882.67607949475\n",
            "9889.534323746455\n",
            "9899.297721882289\n",
            "9895.620298827407\n",
            "9896.377824277964\n",
            "9895.50219840506\n",
            "9894.385979288145\n",
            "9892.41248008632\n",
            "9883.754738246771\n",
            "9900.180292392373\n",
            "9899.402906559371\n",
            "9901.996443917229\n",
            "9909.254035080668\n",
            "9902.548055010131\n",
            "9891.97035237508\n",
            "9887.725995406172\n",
            "9894.838398453556\n",
            "9896.279478763885\n",
            "9900.66157294696\n",
            "9906.186612857337\n",
            "9923.247165508743\n",
            "9930.203574665877\n",
            "9923.617392507016\n",
            "9933.994141977224\n",
            "9942.227299166674\n",
            "9938.605303004342\n",
            "9924.174444584814\n",
            "9916.908624782358\n",
            "9927.79166874393\n",
            "9934.413309049469\n",
            "9938.219442358759\n",
            "9957.564791484885\n",
            "9966.98320647616\n",
            "9969.60957271061\n",
            "9972.060548351808\n",
            "9971.041548197582\n",
            "9959.8142718007\n",
            "9951.8781781948\n",
            "9956.702609681284\n",
            "9949.330215665794\n",
            "9942.795785953367\n",
            "9945.552399970356\n",
            "9948.069428057794\n",
            "9939.17847955749\n",
            "9943.717967435421\n",
            "9944.35767914802\n",
            "9941.489166722477\n",
            "9942.063925767976\n",
            "9937.482505658443\n",
            "9935.310087427619\n",
            "9924.020446546343\n",
            "9910.567939859027\n",
            "9905.340193983166\n",
            "9903.642563510424\n",
            "9898.413627276323\n",
            "9904.772975016962\n",
            "9904.234882558985\n",
            "9903.12170419239\n",
            "9909.224401128178\n",
            "9909.467141020175\n",
            "9900.733565940121\n",
            "9902.197664223322\n",
            "9903.132291667202\n",
            "9898.529225120696\n",
            "9895.982373748935\n",
            "9896.879187134151\n",
            "9876.127587861745\n",
            "9878.561218705834\n",
            "9876.134305281588\n",
            "9874.387886450988\n",
            "9864.515337161256\n",
            "9866.81531813029\n",
            "9857.223373210983\n",
            "9863.086372498808\n",
            "9869.475405061183\n",
            "9869.837286986321\n",
            "9864.96321622666\n",
            "9864.573735240172\n",
            "9865.13367086464\n",
            "9861.094086220131\n",
            "9848.870620369045\n",
            "9847.627886947492\n",
            "9845.243901672187\n",
            "9846.528948950709\n",
            "9844.075907033384\n",
            "9835.872593802005\n",
            "9831.123225452562\n",
            "9830.857703281208\n",
            "9819.434109223786\n",
            "9815.684318661217\n",
            "9821.504465973338\n",
            "9820.071157145912\n",
            "9813.86758092236\n",
            "9818.740132226781\n",
            "9829.396940779427\n",
            "9828.6258706241\n",
            "9832.36926238167\n",
            "9834.901351773337\n",
            "9826.863380733377\n",
            "9827.446556165185\n",
            "9827.868580290504\n",
            "9828.284305568885\n",
            "9827.96861219855\n",
            "9822.004463483689\n",
            "9821.225794862716\n",
            "9813.348971748936\n",
            "9803.732085158275\n",
            "9799.874019593037\n",
            "9812.921592127836\n",
            "9824.642621839463\n",
            "9830.038735349464\n",
            "9835.559978843772\n",
            "9841.033756289218\n",
            "9851.106634567517\n",
            "9853.864947181166\n",
            "9852.836394368365\n",
            "9860.110591660732\n",
            "9862.044118410618\n",
            "9869.934851125334\n",
            "9875.287010735705\n",
            "9880.754898837535\n",
            "9878.855663250053\n",
            "9884.302763087886\n",
            "9888.092091525681\n",
            "9886.41822330553\n",
            "9866.079628254301\n",
            "9870.239391671617\n",
            "9870.654461398175\n",
            "9864.181514720887\n",
            "9856.614017385928\n",
            "9861.803919253578\n",
            "9865.07125717426\n",
            "9873.248802875047\n",
            "9876.946788578352\n",
            "9876.397909338446\n",
            "9871.817653160515\n",
            "9871.302186882129\n",
            "9874.829166268526\n",
            "9871.723203081685\n",
            "9880.630138166018\n",
            "9892.07527432068\n",
            "9889.856570033406\n",
            "9882.890556865532\n",
            "9898.482067246438\n",
            "9902.355488878587\n",
            "9904.32364684833\n",
            "9906.061556139914\n",
            "9913.284031805013\n",
            "9921.25734399863\n",
            "9917.15572685986\n",
            "9910.5654680274\n",
            "9923.348629881646\n",
            "9925.241800436961\n",
            "9921.777408533668\n",
            "9926.57028588878\n",
            "9920.483341519937\n",
            "9921.022112945186\n",
            "9911.200423112923\n",
            "9907.562004359053\n",
            "9898.074575985976\n",
            "9901.238700568598\n",
            "9915.216620763253\n",
            "9911.959569527695\n",
            "9898.94439887644\n",
            "9899.656134580435\n",
            "9902.771568813421\n",
            "9902.42912978959\n",
            "9904.21657517047\n",
            "9896.922539547586\n",
            "9885.491793699917\n",
            "9884.473808895686\n",
            "9877.830489175598\n",
            "9874.54434114004\n",
            "9863.05435406305\n",
            "9852.670707435878\n",
            "9860.533311598438\n",
            "9859.435200572514\n",
            "9853.974738024384\n",
            "9852.496758804527\n",
            "9852.286155937423\n",
            "9845.135811308812\n",
            "9847.939282746367\n",
            "9840.227907586985\n",
            "9832.855182120375\n",
            "9833.732506351225\n",
            "9832.032168832044\n",
            "9827.078655009154\n",
            "9824.544912735397\n",
            "9822.299988490176\n",
            "9818.019357713194\n",
            "9812.157097389068\n",
            "9814.83552620838\n",
            "9807.658863159844\n",
            "9798.32349018343\n",
            "9795.122134888681\n",
            "9798.517368676734\n",
            "9801.00697525856\n",
            "9813.325581436335\n",
            "9828.01433516066\n",
            "9833.525420942948\n",
            "9835.848413750995\n",
            "9837.33219882476\n",
            "9840.196981654699\n",
            "9832.375316992053\n",
            "9824.69632553434\n",
            "9828.10043254192\n",
            "9825.526641974198\n",
            "9828.876150971479\n",
            "9829.981791142107\n",
            "9816.578051121054\n",
            "9814.50165550102\n",
            "9806.86611917578\n",
            "9798.247328907599\n",
            "9797.217365552542\n",
            "9794.300362617407\n",
            "9794.98945273902\n",
            "9793.517699714705\n",
            "9797.261874750293\n",
            "9797.071535732359\n",
            "9806.562180197887\n",
            "9816.501839248638\n",
            "9820.475899104356\n",
            "9812.692297243995\n",
            "9814.15130509822\n",
            "9815.533129071897\n",
            "9810.128307313618\n",
            "9818.71169603713\n",
            "9827.535434235673\n",
            "9835.484005604581\n",
            "9842.802384117253\n",
            "9862.644214083835\n",
            "9871.931698812119\n",
            "9889.681478312683\n",
            "9910.320909542419\n",
            "9925.303692256533\n",
            "9927.280682985373\n",
            "9928.541298488417\n",
            "9938.708694098266\n",
            "9953.33696764977\n",
            "9969.199663179088\n",
            "9987.5902218799\n",
            "10004.76835455439\n",
            "10019.453267942297\n",
            "10026.8947155172\n",
            "10029.372762415649\n",
            "10027.775741419482\n",
            "10029.507552017467\n",
            "10030.423363588174\n",
            "10026.398224445527\n",
            "10034.358840923489\n",
            "10032.796441203365\n",
            "10034.49360454811\n",
            "10047.405649433671\n",
            "10059.032161181938\n",
            "10069.91316669977\n",
            "10074.312517451845\n",
            "10084.766458974678\n",
            "10097.266387020205\n",
            "10112.491627718855\n",
            "10108.426936254245\n",
            "10111.037682865124\n",
            "10106.411871008948\n",
            "10104.846997914638\n",
            "10111.237173338872\n",
            "10118.512656194142\n",
            "10132.738047805937\n",
            "10147.249693856342\n",
            "10154.846353372574\n",
            "10162.094764332129\n",
            "10161.324539609957\n",
            "10161.525237204667\n",
            "10163.391513151182\n",
            "10167.7764326457\n",
            "10172.008722425924\n",
            "10176.540756327633\n",
            "10179.190366594863\n",
            "10191.426313477295\n",
            "10191.16286883525\n",
            "10202.258758135977\n",
            "10199.728995356118\n",
            "10209.212748105787\n",
            "10213.497685772003\n",
            "10220.478973942792\n",
            "10221.650629763188\n",
            "10236.403235192698\n",
            "10242.551861683694\n",
            "10244.444457885065\n",
            "10253.415588704525\n",
            "10252.14474554198\n",
            "10256.93836932422\n",
            "10270.283250636932\n",
            "10287.233359906217\n",
            "10290.543377377502\n",
            "10283.85201891591\n",
            "10277.231250756426\n",
            "10272.871716978623\n",
            "10265.56901303991\n",
            "10255.623355151973\n",
            "10258.807596563707\n",
            "10269.03761676516\n",
            "10272.074174299363\n",
            "10264.17258892516\n",
            "10263.556108611781\n",
            "10264.338644798145\n",
            "10260.161873402767\n",
            "10248.200911250722\n",
            "10248.795870615262\n",
            "10247.511686327396\n",
            "10245.81589581492\n",
            "10237.447427249455\n",
            "10234.201813152209\n",
            "10234.420792896866\n",
            "10228.30737082508\n",
            "10237.031428491351\n",
            "10238.923007349485\n",
            "10245.978852151697\n",
            "10252.093170057457\n",
            "10250.368362769084\n",
            "10249.969169056938\n",
            "10247.048122761194\n",
            "10249.048085855296\n",
            "10255.964616021227\n",
            "10260.319686655295\n",
            "10264.5156716132\n",
            "10262.029481797557\n",
            "10251.977477001376\n",
            "10250.924117407272\n",
            "10256.71225056904\n",
            "10260.220224744384\n",
            "10254.671288864012\n",
            "10253.369856221972\n",
            "10258.26377573534\n",
            "10260.670400368157\n",
            "10259.659329158638\n",
            "10253.66848896319\n",
            "10249.44935286617\n",
            "10243.324916064803\n",
            "10240.140702575356\n",
            "10235.976584749502\n",
            "10233.996651589037\n",
            "10235.735935392895\n",
            "10223.573601947897\n",
            "10214.892550570861\n",
            "10209.47110247422\n",
            "10192.37972633279\n",
            "10190.725529494752\n",
            "10184.018429469037\n",
            "10181.161618890115\n",
            "10180.156255691638\n",
            "10174.063503245521\n",
            "10164.358915073437\n",
            "10167.502208789765\n",
            "10170.156132749426\n",
            "10167.558161127292\n",
            "10165.592725325581\n",
            "10156.390106963567\n",
            "10156.603826926575\n",
            "10140.404190944731\n",
            "10130.85074184546\n",
            "10125.95478702847\n",
            "10126.854796385636\n",
            "10135.041347381475\n",
            "10133.17941412498\n",
            "10137.211160893286\n",
            "10144.286700412445\n",
            "10145.98460078627\n",
            "10135.197061924948\n",
            "10138.126015364702\n",
            "10136.753087164601\n",
            "10137.226962887124\n",
            "10131.401790047343\n",
            "10123.922690205178\n",
            "10120.527947093038\n",
            "10117.194339658901\n",
            "10115.891473901407\n",
            "10116.658511402824\n",
            "10113.712052834808\n",
            "10107.986799251672\n",
            "10101.68624831319\n",
            "10101.664387460964\n",
            "10108.261688509127\n",
            "10115.588820370665\n",
            "10120.505434264915\n",
            "10119.90382961423\n",
            "10128.022007983061\n",
            "10123.869427812011\n",
            "10127.482866550641\n",
            "10126.811893322696\n",
            "10130.737162006471\n",
            "10131.471835699207\n",
            "10133.207332604987\n",
            "10142.024270148488\n",
            "10145.060716069507\n",
            "10144.179498367424\n",
            "10144.983869482037\n",
            "10145.165091820198\n",
            "10142.470731960695\n",
            "10146.289799070257\n",
            "10143.229281042022\n",
            "10150.033709304462\n",
            "10154.813000663735\n",
            "10162.627778907923\n",
            "10162.676928245919\n",
            "10156.427435839938\n",
            "10154.392269045025\n",
            "10153.35065994127\n",
            "10154.849575045098\n",
            "10148.424148002874\n",
            "10143.825814624939\n",
            "10143.017588700503\n",
            "10146.545950070058\n",
            "10142.470700194901\n",
            "10127.740350194963\n",
            "10120.523935385469\n",
            "10117.94192573038\n",
            "10118.166689897773\n",
            "10118.030956319788\n",
            "10129.077563926858\n",
            "10137.268405979852\n",
            "10145.58018426546\n",
            "10158.635459811298\n",
            "10174.072435983086\n",
            "10175.384945729662\n",
            "10182.788245442143\n",
            "10178.287123818121\n",
            "10179.136160423883\n",
            "10179.90744577149\n",
            "10175.416469368467\n",
            "10183.533785932992\n",
            "10181.605629511805\n",
            "10181.361126465832\n",
            "10181.900324104965\n",
            "10179.403642689404\n",
            "10185.650471573186\n",
            "10187.02833204151\n",
            "10195.10661372997\n",
            "10204.539955191409\n",
            "10210.803038283402\n",
            "10214.890534058632\n",
            "10220.11958292165\n",
            "10226.12694377305\n",
            "10233.47027700322\n",
            "10237.050928647344\n",
            "10246.210276334341\n",
            "10261.807134908368\n",
            "10266.181059266295\n",
            "10270.6260274268\n",
            "10264.282317620873\n",
            "10269.780747032979\n",
            "10274.471410896416\n",
            "10271.971253055775\n",
            "10265.536804753163\n",
            "10268.148458044281\n",
            "10264.452394884876\n",
            "10260.626084526522\n",
            "10259.19290053634\n",
            "10261.757206933906\n",
            "10254.388535167187\n",
            "10248.22981913446\n",
            "10249.906653453143\n",
            "10257.043470737564\n",
            "10260.740281205748\n",
            "10264.460933383378\n",
            "10265.438099628323\n",
            "10265.767310456366\n",
            "10268.698942795116\n",
            "10272.149360254132\n",
            "10277.291951800597\n",
            "10277.712375284666\n",
            "10280.731722905353\n",
            "10292.833241201999\n",
            "10302.368451776976\n",
            "10303.548283846041\n",
            "10300.59044771479\n",
            "10301.700617320952\n",
            "10296.422245218682\n",
            "10291.77140891454\n",
            "10295.848269745018\n",
            "10297.602317911975\n",
            "10300.94276595336\n",
            "10307.829574978823\n",
            "10310.30656521823\n",
            "10320.569640749594\n",
            "10329.609342015583\n",
            "10338.249086070131\n",
            "10341.610845592917\n",
            "10348.652405140165\n",
            "10350.328837764913\n",
            "10350.82615268502\n",
            "10340.309842439929\n",
            "10335.267872862627\n",
            "10331.90663404361\n",
            "10336.748034711685\n",
            "10338.167589291741\n",
            "10338.565009928067\n",
            "10342.621513343265\n",
            "10338.221503046248\n",
            "10335.6485898155\n",
            "10330.857789324149\n",
            "10326.725364135278\n",
            "10323.460433441609\n",
            "10325.157698159668\n",
            "10325.873595485162\n",
            "10322.506020055402\n",
            "10318.388726593963\n",
            "10312.408325703467\n",
            "10314.77628582879\n",
            "10316.294469180531\n",
            "10312.233785372588\n",
            "10299.251067139798\n",
            "10294.166624718191\n",
            "10289.597305254398\n",
            "10287.101787422735\n",
            "10282.109650429138\n",
            "10280.131627477713\n",
            "10272.797104868856\n",
            "10275.798389003605\n",
            "10273.804593182169\n",
            "10277.2051983439\n",
            "10284.640825435525\n",
            "10285.268814196717\n",
            "10297.804706121206\n",
            "10295.963217327417\n",
            "10300.508839644197\n",
            "10309.04503140331\n",
            "10306.398182077515\n",
            "10315.618180478341\n",
            "10314.216724938207\n",
            "10329.190135162617\n",
            "10337.555932982188\n",
            "10343.072182030606\n",
            "10348.127756539227\n",
            "10345.368238922782\n",
            "10350.761279543716\n",
            "10351.780859973382\n",
            "10353.70230578623\n",
            "10351.392257577656\n",
            "10359.469616801513\n",
            "10366.099791668765\n",
            "10369.589943654715\n",
            "10367.516985934199\n",
            "10366.068711096133\n",
            "10374.5109588524\n",
            "10368.477216063518\n",
            "10371.05763861205\n",
            "10360.647490789037\n",
            "10361.062653145846\n",
            "10356.199751277405\n",
            "10353.182770303645\n",
            "10357.20264265989\n",
            "10359.021525633816\n",
            "10367.689746290856\n",
            "10364.504312956651\n",
            "10372.867848503212\n",
            "10378.801560557065\n",
            "10389.694656426733\n",
            "10387.053139839116\n",
            "10385.375486888284\n",
            "10387.803642182085\n",
            "10369.941863060327\n",
            "10365.257486843746\n",
            "10353.368163393841\n",
            "10341.018507138735\n",
            "10325.963535366287\n",
            "10320.781577204973\n",
            "10308.656057197844\n",
            "10300.654612306038\n",
            "10292.978536730036\n",
            "10282.682756502845\n",
            "10274.795733803001\n",
            "10261.642416527973\n",
            "10261.124525449119\n",
            "10248.755382647758\n",
            "10247.857238605648\n",
            "10245.209405192107\n",
            "10240.834674720265\n",
            "10238.945792948556\n",
            "10232.485199950215\n",
            "10216.369242333327\n",
            "10200.697937590397\n",
            "10205.468265629399\n",
            "10188.573440227552\n",
            "10186.628539817806\n",
            "10180.518799339836\n",
            "10182.473671543197\n",
            "10188.535851257902\n",
            "10197.726967515358\n",
            "10192.821290953825\n",
            "10186.78958626472\n",
            "10188.187084295738\n",
            "10176.915012122792\n",
            "10191.873222098382\n",
            "10195.987943172007\n",
            "10201.38659794522\n",
            "10211.415414584479\n",
            "10219.190132352185\n",
            "10217.005413942323\n",
            "10207.049709854258\n",
            "10203.65395346968\n",
            "10197.106516608144\n",
            "10192.27429530663\n",
            "10190.863182992118\n",
            "10177.384440634998\n",
            "10170.484575474242\n",
            "10163.04562854726\n",
            "10161.426167420486\n",
            "10164.999646994236\n",
            "10171.013323321416\n",
            "10170.708608021483\n",
            "10163.137513116482\n",
            "10150.18213828009\n",
            "10152.1017406066\n",
            "10133.751492043031\n",
            "10123.844728147249\n",
            "10117.622413006071\n",
            "10107.495231638959\n",
            "10091.463214660882\n",
            "10078.179222603558\n",
            "10067.701255310412\n",
            "10066.690712084028\n",
            "10078.506224041732\n",
            "10090.080198412224\n",
            "10100.832810083384\n",
            "10110.179576705923\n",
            "10126.463852823796\n",
            "10133.01816466447\n",
            "10145.992960618978\n",
            "10152.81831907742\n",
            "10156.286895551175\n",
            "10163.557467455283\n",
            "10156.278616001891\n",
            "10166.577786222035\n",
            "10174.0886117989\n",
            "10178.6601276926\n",
            "10183.72142258555\n",
            "10183.115698087731\n",
            "10192.767877428885\n",
            "10212.022125909636\n",
            "10220.026964223041\n",
            "10216.534459167613\n",
            "10223.053812104392\n",
            "10234.248395882101\n",
            "10243.31807208935\n",
            "10249.596734373981\n",
            "10264.029436570752\n",
            "10279.086954026865\n",
            "10284.339899504499\n",
            "10286.734618997929\n",
            "10306.911392255497\n",
            "10309.593942627977\n",
            "10317.756064815085\n",
            "10322.88325550416\n",
            "10324.776104162282\n",
            "10334.45779004105\n",
            "10341.712759873895\n",
            "10333.176090582143\n",
            "10329.027712005452\n",
            "10322.561025699068\n",
            "10323.0413266193\n",
            "10318.939465979644\n",
            "10318.977714785544\n",
            "10300.183847679773\n",
            "10305.325312276325\n",
            "10296.549260161524\n",
            "10306.823489023433\n",
            "10319.057145200173\n",
            "10326.326445156265\n",
            "10331.098179537794\n",
            "10327.830109601373\n",
            "10323.003680342139\n",
            "10324.206728746067\n",
            "10327.282656676854\n",
            "10323.98765375219\n",
            "10321.914556312442\n",
            "10316.834207043945\n",
            "10316.519244682979\n",
            "10316.449602800374\n",
            "10328.18653238329\n",
            "10339.146165152795\n",
            "10353.852284163742\n",
            "10364.503672979978\n",
            "10363.349849770946\n",
            "10370.770392741117\n",
            "10383.879415251758\n",
            "10387.014577569757\n",
            "10407.27860332887\n",
            "10414.783642819546\n",
            "10419.593502697639\n",
            "10424.544875592279\n",
            "10434.848838211472\n",
            "10437.398158227526\n",
            "10442.129109856485\n",
            "10451.738981379693\n",
            "10457.99377861009\n",
            "10462.034121224664\n",
            "10464.39062301088\n",
            "10466.721771050034\n",
            "10465.14694687613\n",
            "10464.401177021507\n",
            "10473.209579926022\n",
            "10480.672945363993\n",
            "10482.320595134715\n",
            "10474.860440904944\n",
            "10486.036733029516\n",
            "10498.627527869206\n",
            "10501.411172508528\n",
            "10515.619957793562\n",
            "10515.333071271494\n",
            "10515.265730203402\n",
            "10500.066439519334\n",
            "10485.46214022551\n",
            "10479.44209124821\n",
            "10483.467519584497\n",
            "10477.168795934413\n",
            "10478.861921018573\n",
            "10477.689984374494\n",
            "10474.829772039857\n",
            "10480.698630126204\n",
            "10482.708594726919\n",
            "10507.325008552274\n",
            "10523.428504390207\n",
            "10529.15173241821\n",
            "10545.735899946882\n",
            "10555.693495960702\n",
            "10556.341122670732\n",
            "10547.9021943549\n",
            "10550.206703168295\n",
            "10553.350851687268\n",
            "10557.901043077578\n",
            "10566.101186263228\n",
            "10576.381936142348\n",
            "10579.775223109764\n",
            "10569.791597066573\n",
            "10578.062284559788\n",
            "10575.819395512135\n",
            "10578.05025670909\n",
            "10576.450800937728\n",
            "10585.41728256828\n",
            "10581.110522751285\n",
            "10570.325010219698\n",
            "10575.55318118209\n",
            "10579.57224988813\n",
            "10585.211513883545\n",
            "10569.284903918038\n",
            "10577.17737248892\n",
            "10564.430184216306\n",
            "10563.4255339721\n",
            "10562.422051689688\n",
            "10571.801985023325\n",
            "10561.28080061087\n",
            "10553.973630302557\n",
            "10541.25699130447\n",
            "10527.666574293855\n",
            "10530.1323524695\n",
            "10523.196911801515\n",
            "10516.06556968465\n",
            "10519.532415574899\n",
            "10538.844999673536\n",
            "10547.9028497806\n",
            "10548.941733869971\n",
            "10548.626631391462\n",
            "10542.660752915968\n",
            "10546.7858314359\n",
            "10539.335050491329\n",
            "10538.220914637848\n",
            "10538.579469313725\n",
            "10537.834683987723\n",
            "10538.913561457053\n",
            "10530.660027941602\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "311"
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bestRangeStart"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OIEWgMRijj-J",
        "outputId": "01a9c5a4-9705-47c7-9e48-5d778ecae13f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "311"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "HBXtQQAWnJMf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def match_video (shortfeature,longputfile,outputfile): \n",
        "    longvideo = VideoFileClip(longputfile)\n",
        "    tsfps = longvideo.fps\n",
        "    tsFrameLength = 1/tsfps\n",
        "    \n",
        "    global bestRangeStart\n",
        "    global MatchedVideo\n",
        "\n",
        "    nrFrames = len(shortfeature)*16\n",
        "    startFrame = bestRangeStart*16\n",
        "\n",
        "    startTime = startFrame*tsFrameLength\n",
        "    endTime = startTime+nrFrames*tsFrameLength\n",
        "\n",
        "    MatchedVideo = longvideo.subclip(startTime,endTime)\n",
        "\n",
        "    \n",
        "\n",
        "    MatchedVideo.write_videofile(outputfile, audio_codec='aac')\n",
        "\n",
        "    "
      ],
      "metadata": {
        "id": "4qQleiXXFxRj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "match_video(CFeatures,'/content/drive/MyDrive/RC11_2022-23/videotoproress/Abdoh_Reza_Tight_Right_White_1993_1.mp4',\"/content/drive/MyDrive/RC11_2022-23/video_done/TSWithFC1.mp4\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mky2fUTqnvJM",
        "outputId": "6ba1aa19-56e6-4453-848e-20e67aa67dde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [02:24<00:08, 1150.05it/s, now=None]\u001b[A\n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [02:24<00:08, 1150.05it/s, now=None]\u001b[A"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Moviepy - Building video /content/drive/MyDrive/RC11_2022-23/video_done/TSWithFC1.mp4.\n",
            "MoviePy - Writing audio in TSWithFC1TEMP_MPY_wvf_snd.mp4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "                                                                     \n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [02:33<00:08, 1150.05it/s, now=None]\u001b[A\n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [02:33<00:08, 1150.05it/s, now=None]\u001b[A"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MoviePy - Done.\n",
            "Moviepy - Writing video /content/drive/MyDrive/RC11_2022-23/video_done/TSWithFC1.mp4\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [03:32<00:08, 1150.05it/s, now=None]\u001b[A\n",
            "\u001b[A\n",
            "chunk:   7%|▋         | 775/10466 [03:32<00:08, 1150.05it/s, now=None]\u001b[A"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Moviepy - Done !\n",
            "Moviepy - video ready /content/drive/MyDrive/RC11_2022-23/video_done/TSWithFC1.mp4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MatchedVideo.duration"
      ],
      "metadata": {
        "id": "qQ54UPfrI0X5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d3764c3-f934-41a4-911d-975a69640164"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "248.7818666666667"
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "frame = MatchedVideo.get_frame(5)"
      ],
      "metadata": {
        "id": "xeuFlIiXuzqc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from PIL import Image\n",
        "     \n",
        "\n"
      ],
      "metadata": {
        "id": "x6aTaHQNu7JE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Image.fromarray(frame,'RGB')\n",
        "     "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        },
        "id": "P2_aOpxC6KTm",
        "outputId": "bcfdf293-2f93-47c9-aac4-5a23695864b1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=320x240 at 0x7F6ADEE29970>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mIm3ooLe6Rlk"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}